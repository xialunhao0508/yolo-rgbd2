# Ultralytics YOLO 🚀, AGPL-3.0 license
# YOLOv8-seg instance segmentation model. For Usage examples see https://docs.ultralytics.com/tasks/segment

# Parameters
nc: 1  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-seg.yaml' will call yolov8-seg.yaml with scale 'n'
  # [depth, width, max_channels]
  #这里的depth代表网络深度，也就是网络层数
  #n = max(round(n * gd), 1) if n > 1 else n  # depth gain
  #式中的n表示参数中的depth， gd代表backbone中的列表的第2列repeats部分。
  ####################-----------------------------###################
  #这里的width代表网络宽度，也就是网络输出的通道数
  #c2 = make_divisible(c2 * gw, 8)
  #式中的c2表示参数中的width， gw代表backbone中的列表的第3列module部分列表的第一个数。
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]
#ResNet backbone
backbone_rs_posi: 5

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, SE_, [160, 160]]  #h, w
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
  - [-1, 6, C2f, [256, True]]
  - [-1, 1, SE_, [160, 160]]
  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
  - [-1, 6, C2f, [512, True]]
  - [-1, 1, SE_, [160, 160]]
  - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
  - [-1, 3, C2f, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]]
  - [-1, 1, SE_, [160, 160]]   # 18

backbone_rs:
  - [-1, 1, Pre, [160, 3, 2]]
  - [-1, 1, ResLayer1, [160, 3, 2]]
  - [-1, 1, ResLayer2, [320, 3, 2]]
  - [-1, 1, ResLayer3, [640, 3, 2]]
  - [-1, 1, ResLayer4, [640, 3, 2]]
# YOLOv8.0n head
head:
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 14], 1, Concat, [1]]  # cat backbone P4
  - [-1, 3, C2f, [512]]  # 12   Concat25!!

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 11], 1, Concat, [1]]  # cat backbone P3
  - [-1, 3, C2f, [256]]  # 15 (P3/8-small)  Concat28!!

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 21], 1, Concat, [1]]  # cat head P4
  - [-1, 3, C2f, [512]]  # 18 (P4/16-medium)  Concat31

  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 18], 1, Concat, [1]]  # cat head P5
  - [-1, 3, C2f, [1024]]  # 21 (P5/32-large)  Concat34

  - [[24, 27, 30], 1, Segment, [nc, 32, 256]]  # Segment(P3, P4, P5)
